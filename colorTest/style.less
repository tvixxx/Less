/* First method - Common */

@base-color: rgb(110, 27, 255); // например, сменив первое значение, поменяется весь color-ряд ниже

@distance: 60;
@error-color: spin(@base-color, @distance);
@info-color: spin(@base-color, @distance * -1);
@warn-color: spin(@base-color, @distance * 2);
@success-color: spin(@base-color, @distance * -2);

.color {
    &-primary {
        background-color: @base-color;
    }
    &-error {
        background-color: @error-color;
    }
    &-info {
        background-color: @info-color;
    }
    &-warning {
        background-color: @warn-color;
    }
    &-success {
        background-color: @success-color;
    }
}

.palette-item {
    display: inline-block;
    .color {
        margin: 0 .5em;
    }
}

/* Second method - Desaturate and Saturate */
@base-color: rgb(110, 27, 255);
@alter-color: spin(@base-color, 60);

.btn {
    &-primary {
        background-color: @base-color;
        
        &-hover, &:hover {
            background-color: lighten(@base-color, 20%);
        }
        
        &-pressed, &:active {
            background-color: darken(@base-color, 20%);
        }
        
        /* &-правило добавьте тут */
        &-disabled {
            color: rgba(255, 255, 255, 0.8); 
            background-color: desaturate(lighten(@base-color, 20%), 70%);
        }
    }
}

/* Third method - darken and lighten */
@base-color: rgb(110, 27, 255);
@alert-primary-bg: lighten(@base-color, 35%);
@distance: -10;
@alert-primary-border: darken(spin(@alert-primary-bg, @distance), 5);
@alert-primary-text: darken(@alert-primary-bg, 50%); 

.alert {
    &-primary {
        background-color: @alert-primary-bg;
        border-color: @alert-primary-border;
        color: @alert-primary-text;
    }
}
